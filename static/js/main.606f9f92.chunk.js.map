{"version":3,"sources":["Clock.tsx","App.tsx","index.tsx"],"names":["Clock","timerId","state","currentTime","Date","toUTCString","slice","updateTime","console","info","setState","this","setInterval","prevProps","name","props","debug","clearInterval","className","React","Component","App","hasClock","clockName","undefined","hideClock","event","preventDefault","showClock","document","addEventListener","value","now","toString","getRandomName","removeEventListener","ReactDOM","render","getElementById"],"mappings":"yLAUaA,EAAb,4MACUC,QAAiC,KAD3C,EAGEC,MAAQ,CACNC,aAAa,IAAIC,MAAOC,cAAcC,OAAO,IAAK,IAJtD,EAwBEC,WAAa,WACX,IAAMJ,GAAc,IAAIC,MAAOC,cAAcC,OAAO,IAAK,GAGzDE,QAAQC,KAAR,UAAgBN,IAChB,EAAKO,SAAS,CAAEP,iBA7BpB,uDAOE,WACEQ,KAAKV,QAAUW,YAAYD,KAAKJ,WAAY,OARhD,gCAWE,SAAmBM,GACbA,EAAUC,OAASH,KAAKI,MAAMD,MAEhCN,QAAQQ,MAAR,uBAA8BH,EAAUC,KAAxC,eAAmDH,KAAKI,MAAMD,SAdpE,kCAkBE,WACMH,KAAKV,SACPgB,cAAcN,KAAKV,WApBzB,oBAgCE,WACE,IAAQa,EAASH,KAAKI,MAAdD,KACAX,EAAgBQ,KAAKT,MAArBC,YAER,OACE,sBAAKe,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SAAiCJ,IAChC,YACD,sBAAMI,UAAU,cAAhB,SAA+Bf,WAxCvC,GAA2BgB,IAAMC,WCD1B,IAAMC,EAAb,4MACEnB,MAAQ,CACNoB,UAAU,EACVC,UAAW,WAHf,EAMEtB,aAA8BuB,EANhC,EAyBEC,UAAY,SAACC,GACXA,EAAMC,iBACN,EAAKjB,SAAS,CAAEY,UAAU,KA3B9B,EA8BEM,UAAY,WACV,EAAKlB,SAAS,CAAEY,UAAU,KA/B9B,uDAQE,WAAqB,IAAD,OAClBO,SAASC,iBAAiB,cAAenB,KAAKc,WAC9CI,SAASC,iBAAiB,QAASnB,KAAKiB,WAExCjB,KAAKV,QAAUW,aAAY,WACzB,IAAMW,EAnBZ,WACE,IAAMQ,EAAQ3B,KAAK4B,MAAMC,WAAW3B,OAAO,GAE3C,MAAM,SAAN,OAAgByB,GAgBMG,GAElB,EAAKxB,SAAS,CAAEa,gBACf,QAhBP,kCAmBE,WACEM,SAASM,oBAAoB,cAAexB,KAAKc,WACjDI,SAASM,oBAAoB,QAASxB,KAAKiB,WAC3CX,cAAcN,KAAKV,WAtBvB,oBAkCE,WACE,MAAgCU,KAAKT,MAA7BoB,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,UAElB,OACE,sBAAKL,UAAU,MAAf,UACE,6CACCI,GAAY,cAAC,EAAD,CAAOR,KAAMS,WAxClC,GAAyBJ,IAAMC,WCN/BgB,IAASC,OACP,cAAC,EAAD,IACAR,SAASS,eAAe,W","file":"static/js/main.606f9f92.chunk.js","sourcesContent":["import React from 'react';\n\ninterface ClockProps {\n  name: string;\n}\n\ninterface ClockState {\n  currentTime: string;\n}\n\nexport class Clock extends React.Component<ClockProps, ClockState> {\n  private timerId: NodeJS.Timeout | null = null;\n\n  state = {\n    currentTime: new Date().toUTCString().slice(-12, -4),\n  };\n\n  componentDidMount() {\n    this.timerId = setInterval(this.updateTime, 1000);\n  }\n\n  componentDidUpdate(prevProps: ClockProps) {\n    if (prevProps.name !== this.props.name) {\n      // eslint-disable-next-line no-console\n      console.debug(`Renamed from ${prevProps.name} to ${this.props.name}`);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.timerId) {\n      clearInterval(this.timerId);\n    }\n  }\n\n  updateTime = () => {\n    const currentTime = new Date().toUTCString().slice(-12, -4);\n\n    // eslint-disable-next-line no-console\n    console.info(`${currentTime}`);\n    this.setState({ currentTime });\n  };\n\n  render() {\n    const { name } = this.props;\n    const { currentTime } = this.state;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">{name}</strong>\n        {' time is '}\n        <span className=\"Clock__time\">{currentTime}</span>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { Clock } from './Clock';\n\nfunction getRandomName() {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\nexport class App extends React.Component {\n  state = {\n    hasClock: true,\n    clockName: 'Clock-0',\n  };\n\n  timerId: number | undefined = undefined;\n\n  componentDidMount() {\n    document.addEventListener('contextmenu', this.hideClock);\n    document.addEventListener('click', this.showClock);\n\n    this.timerId = setInterval(() => {\n      const clockName = getRandomName();\n\n      this.setState({ clockName });\n    }, 3300) as unknown as number;\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('contextmenu', this.hideClock);\n    document.removeEventListener('click', this.showClock);\n    clearInterval(this.timerId);\n  }\n\n  hideClock = (event: MouseEvent) => {\n    event.preventDefault();\n    this.setState({ hasClock: false });\n  };\n\n  showClock = () => {\n    this.setState({ hasClock: true });\n  };\n\n  render() {\n    const { hasClock, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {hasClock && <Clock name={clockName} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}